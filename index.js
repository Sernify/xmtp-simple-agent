import { Agent } from '@xmtp/agent-sdk';
import { getTestUrl } from '@xmtp/agent-sdk/debug';

// –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const agent = await Agent.createFromEnv({
  env: 'dev', // –∏—Å–ø–æ–ª—å–∑—É–µ–º dev –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è Sepolia Testnet
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
agent.on('text', async (ctx) => {
  const message = ctx.message.content.toLowerCase().trim();
  
  // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞
  if (message.includes('–ø—Ä–∏–≤–µ—Ç') || message.includes('hello')) {
    await ctx.sendText('üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø—Ä–æ—Å—Ç–æ–π XMTP –∞–≥–µ–Ω—Ç. –ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!');
  } else if (message.includes('–∫–∞–∫ –¥–µ–ª–∞') || message.includes('how are you')) {
    await ctx.sendText('–û—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å–ø—Ä–æ—Å–∏–ª üòä');
  } else if (message.includes('–ø–æ–º–æ—â—å') || message.includes('help')) {
    await ctx.sendText('–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!');
  } else {
    await ctx.sendText(`–¢—ã –Ω–∞–ø–∏—Å–∞–ª: "${ctx.message.content}"\n\n–Ø –ø–æ–ª—É—á–∏–ª —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üëç`);
  }
});

// –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞
agent.on('start', () => {
  console.log('üöÄ XMTP Agent –∑–∞–ø—É—â–µ–Ω!');
  console.log(`üì¨ –ê–¥—Ä–µ—Å –∞–≥–µ–Ω—Ç–∞: ${agent.address}`);
  console.log(`üîó –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: ${getTestUrl(agent.client)}`);
  console.log('‚è≥ –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏–π...');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
agent.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≥–µ–Ω—Ç–∞:', error);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞
await agent.start();
